# dor-webhook-certs secret
apiVersion: v1
kind: Secret
metadata:
  name: dor-webhook-certs
  namespace: default
type: kubernetes.io/tls
# create with:
# kubectl create secret tls dor-webhook-certs \
#   --cert=server.crt --key=server.key -n default

---
# dor-admission-webhook Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dor-admission-webhook
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dor-admission-webhook
  template:
    metadata:
      labels:
        app: dor-admission-webhook
    spec:
      containers:
      - name: webhook
        image: your.registry/webhook:latest
        args:
        - "-tlsCertFile=/certs/tls.crt"
        - "-tlsKeyFile=/certs/tls.key"
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: certs
          mountPath: /certs
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: dor-webhook-certs

---
# dor-admission-webhook Service
apiVersion: v1
kind: Service
metadata:
  name: dor-admission-webhook-svc
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app: dor-admission-webhook

---
# dor-prevent-lb-service-webhook ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: dor-prevent-lb-service-webhook
webhooks:
- name: dor.prevent-lb.target.svc
  clientConfig:
    service:
      name: dor-admission-webhook-svc
      namespace: default
      path: /validate
    caBundle: <CA_BUNDLE>
  rules:
  - apiGroups: [""]
    apiVersions: ["v1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["services"]
  namespaceSelector:
    matchNames:
    - dor
  failurePolicy: Fail
  sideEffects: None
  admissionReviewVersions: ["v1"]

